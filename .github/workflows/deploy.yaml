name: Deploy para AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login na AWS 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.5  # Substitua pela versão do Terraform que você está utilizando
      
      - name: Initialize Terraform
        working-directory: ./terraform
        run: | 
          run: |
            terraform init -backend-config="bucket=terraform-state-restapi-globo" \
                       -backend-config="key=terraform/terraform.tfstate" \
                       -backend-config="region=us-east-1" \
                       -backend-config="encrypt=true" \
                       -backend-config="dynamodb_table=terraform-locks"

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve  # Aplica as mudanças sem pedir confirmação
        
      - name: Login no AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 339712833448.dkr.ecr.us-east-1.amazonaws.com/apirestglobo

      - name: Construir e enviar a imagem Docker
        run: |
          docker build -t api-comentarios .
          docker tag api-comentarios:latest 339712833448.dkr.ecr.us-east-1.amazonaws.com/apirestglobo:latest
          docker push 339712833448.dkr.ecr.us-east-1.amazonaws.com/apirestglobo:latest

      - name: Atualizar serviço ECS
        run: |
          aws ecs update-service --cluster api-cluster --service api-comentarios --force-new-deployment
